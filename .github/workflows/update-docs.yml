# ðŸ§¶ Remi: Library to handling files for persistent storage with Google Cloud Storage
# and Amazon S3-compatible server, made in Kotlin!
#
# Copyright 2022 Noelware <team@noelware.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "Update documentation at 00:00"
on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'
jobs:
  update-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Generate documentation
        run: chmod +x ./scripts/deploy-docs.sh && ./scripts/deploy-docs.sh

      - name: Check if git status is dirty
        id: git_status
        run: |
          if [ -n "$(git status --porcelain)" ]; then
              echo '::set-output name=STATUS_DIRTY::true'
          else
            echo '::set-output name=STATUS_DIRTY::false'
          fi

      - name: Commit changes (if dirty)
        if: contains(steps.git_status.outputs.STATUS_DIRTY, 'true')
        run: |
          git config --global user.name "Noel[bot]"
          git config --global user.email "noelbot@users.noreply.github.com"
          git config --global committer.name "Noel"
          git config --global committer.email "cutie@floofy.dev"
          
          git add .
          git commit -m "chore: update documentation"
          git push -u origin master
